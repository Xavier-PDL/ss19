/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 17 "X:/Git/Repos/Serious-Engine/Sources/Engine/Classes/BaseEvents.es"

#include "StdH.h"
#define DECL_DLL ENGINE_API
#include <Engine/Entities/EntityEvent.h>
#include <Engine/Entities/EntityPointer.h>
#include <Engine/Math/Vector.h>
#include <Engine/Math/Plane.h>
#include <Engine/Entities/EntityProperties.h>

#include <Engine/Classes/BaseEvents.h>
#include <Engine/Classes/BaseEvents_tables.h>
CEntityEvent *EInternal::MakeCopy(void) { CEntityEvent *peeCopy = new EInternal(*this); return peeCopy;}
EInternal::EInternal() : CEntityEvent(EVENTCODE_EInternal) {;
};
CEntityEvent *EVoid::MakeCopy(void) { CEntityEvent *peeCopy = new EVoid(*this); return peeCopy;}
EVoid::EVoid() : CEntityEvent(EVENTCODE_EVoid) {;
};
CEntityEvent *EReturn::MakeCopy(void) { CEntityEvent *peeCopy = new EReturn(*this); return peeCopy;}
EReturn::EReturn() : CEntityEvent(EVENTCODE_EReturn) {;
};
CEntityEvent *EBegin::MakeCopy(void) { CEntityEvent *peeCopy = new EBegin(*this); return peeCopy;}
EBegin::EBegin() : CEntityEvent(EVENTCODE_EBegin) {;
};
CEntityEvent *ETimer::MakeCopy(void) { CEntityEvent *peeCopy = new ETimer(*this); return peeCopy;}
ETimer::ETimer() : CEntityEvent(EVENTCODE_ETimer) {;
};
CEntityEvent *ETouch::MakeCopy(void) { CEntityEvent *peeCopy = new ETouch(*this); return peeCopy;}
ETouch::ETouch() : CEntityEvent(EVENTCODE_ETouch) {;
 ClearToDefault(penOther);
 ClearToDefault(bThisMoved);
 ClearToDefault(plCollision);
};
CEntityEvent *EPass::MakeCopy(void) { CEntityEvent *peeCopy = new EPass(*this); return peeCopy;}
EPass::EPass() : CEntityEvent(EVENTCODE_EPass) {;
 ClearToDefault(penOther);
 ClearToDefault(bThisMoved);
};
CEntityEvent *EBlock::MakeCopy(void) { CEntityEvent *peeCopy = new EBlock(*this); return peeCopy;}
EBlock::EBlock() : CEntityEvent(EVENTCODE_EBlock) {;
 ClearToDefault(penOther);
 ClearToDefault(plCollision);
};
CEntityEvent *EWouldFall::MakeCopy(void) { CEntityEvent *peeCopy = new EWouldFall(*this); return peeCopy;}
EWouldFall::EWouldFall() : CEntityEvent(EVENTCODE_EWouldFall) {;
};
CEntityEvent *ETeleport::MakeCopy(void) { CEntityEvent *peeCopy = new ETeleport(*this); return peeCopy;}
ETeleport::ETeleport() : CEntityEvent(EVENTCODE_ETeleport) {;
};
CEntityEvent *EPreLevelChange::MakeCopy(void) { CEntityEvent *peeCopy = new EPreLevelChange(*this); return peeCopy;}
EPreLevelChange::EPreLevelChange() : CEntityEvent(EVENTCODE_EPreLevelChange) {;
 ClearToDefault(iUserData);
};
CEntityEvent *EPostLevelChange::MakeCopy(void) { CEntityEvent *peeCopy = new EPostLevelChange(*this); return peeCopy;}
EPostLevelChange::EPostLevelChange() : CEntityEvent(EVENTCODE_EPostLevelChange) {;
 ClearToDefault(iUserData);
};
CEntityEvent *EFirstWorldBase::MakeCopy(void) { CEntityEvent *peeCopy = new EFirstWorldBase(*this); return peeCopy;}
EFirstWorldBase::EFirstWorldBase() : CEntityEvent(EVENTCODE_EFirstWorldBase) {;
};
CEntityEvent *EDamage::MakeCopy(void) { CEntityEvent *peeCopy = new EDamage(*this); return peeCopy;}
EDamage::EDamage() : CEntityEvent(EVENTCODE_EDamage) {;
 ClearToDefault(penInflictor);
 ClearToDefault(vDirection);
 ClearToDefault(vHitPoint);
 ClearToDefault(fAmount);
 ClearToDefault(dmtType);
};
CEntityEvent *EDeath::MakeCopy(void) { CEntityEvent *peeCopy = new EDeath(*this); return peeCopy;}
EDeath::EDeath() : CEntityEvent(EVENTCODE_EDeath) {;
 ClearToDefault(eLastDamage);
};
CEntityEvent *ETakingBreath::MakeCopy(void) { CEntityEvent *peeCopy = new ETakingBreath(*this); return peeCopy;}
ETakingBreath::ETakingBreath() : CEntityEvent(EVENTCODE_ETakingBreath) {;
 ClearToDefault(fBreathDelay);
};
